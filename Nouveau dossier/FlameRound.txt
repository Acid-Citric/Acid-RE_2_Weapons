ACTOR M79FlameProj // Incendiary grenade from Aracnocide
{
	Radius 6
	Height 6
	Speed 50//30
	Damage 5
	Projectile
	-NOGRAVITY
	+RANDOMIZE
	+DEHEXPLOSION
	+CANBOUNCEWATER
	Gravity 0.75
	DeathSound "Weapons/M79/Flame"
	Obituary "$OB_GRENADE"
	DamageType Fire
	Scale 0.35
	States
	{
	Spawn:
		GRND A 1
		Loop
	Death:
		TNT1 A 0 A_JumpIf(WaterLevel >= 2, 11)
		TNT1 AAAAAAAAAA 0 A_SpawnItemEx("BurningFlames", random(0, 45), random(0, 55), 0, 0, 0, 0, random(0, 360))
		TNT1 A 10 Bright A_Explode(128,128,XF_HURTSOURCE|XF_NOSPLASH) 
		Stop
	}
}

ACTOR BurningFlames
{
	DamageType Fire
	Radius 5
	Height 5
	RenderStyle "Add"
	Alpha 0.7
	Scale 0.1
	-SOLID
	var int user_flametimer;
	States
	{
	Spawn:
//Flames are getting bigger.
		TNT1 A 5
		FLMS AB 1 Bright 
		FLMS CD 1 Bright A_SetScale(0.3, 0.3)
		FLMS EF 1 Bright A_SetScale(0.5, 0.5)
		FLMS GH 1 Bright A_SetScale(0.8, 0.8)
		FLMS IJ 1 Bright A_SetScale(1.0, 1.0)
//I use A_Explode for fire damage. There are other ways to cause damage if you don't like this method,
//but i always found it to be quick and easy to do. Also, make sure to add a custom puff into the code to cause 
//proper fire-type damage. Right now, since it is still in prototype phase, i haven't added any custom puff to
//the explosion damage.
	FlameBurns:
		FLMS ABCDEFGHIJ 1 Bright A_Explode(5, 10, 0, 0, 1, 0, 0) // 12 times
		TNT1 A 0 A_SetUserVar("user_flametimer", user_flametimer + 1)
		TNT1 A 0 A_JumpIf(user_flametimer > 12, 1)
		Loop
//After burning for a while, the flames are now fading.
		FLMS AB 1 Bright A_SetScale(0.8, 0.8)
		FLMS CD 1 Bright A_SetScale(0.5, 0.5)
		FLMS EF 1 Bright A_SetScale(0.3, 0.3)
		FLMS GH 1 Bright A_SetScale(0.1, 0.1)
		Stop
	}
}