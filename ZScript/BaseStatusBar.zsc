class RE2StatusBar : BaseStatusBar
{
	HUDFont mHUDFont;
	HUDFont mIndexFont;
	HUDFont mAmountFont;
	HUDFont mConFont;
	HUDFont mBigFont;
	HUDFont mSmallFont;
	HUDFont mNewSmallFont;
	HUDFont mStatusFont;
	HUDFont mRE_StatusFont;
	InventoryBarState diparms;
	

	override void Init()
	{
		Super.Init();
		SetSize(0, 320, 200);

		// Create the font used for the fullscreen HUD
		Font fnt = "HUDFONT_DOOM";
		mHUDFont = HUDFont.Create(fnt, fnt.GetCharWidth("0"), Mono_CellLeft, 1, 1);
		fnt = "INDEXFONT_DOOM";
		mIndexFont = HUDFont.Create(fnt, fnt.GetCharWidth("0"), Mono_CellLeft);
		mAmountFont = HUDFont.Create("INDEXFONT");
		mConFont = HUDFont.Create("CONFONT");
		mBigFont = HUDFont.Create("BIGFONT");
		mSmallFont = HUDFont.Create("SMALLFONT",1,False);
		mNewSmallFont = HUDFont.Create("NEWSMALLFONT");
		mStatusFont = HUDFont.Create("BIGFONT");
		mRE_StatusFont = HUDFont.Create("RE_StatusFont");
		diparms = InventoryBarState.Create();
	}

	override void Draw (int state, double TicFrac)
	{
		Super.Draw (state, TicFrac);

		BeginHUD();
		if(!automapactive) { if (state == HUD_StatusBar || state == HUD_Fullscreen) { DrawFullScreenStuff(); } }
	}

	protected void DrawFullScreenStuff ()
	{
		Bool OverHealth = CPlayer.Mo.CountInv("PowerInvulnerable");
		Bool Fine = CPlayer.Health > 60;
		Bool Caution = CPlayer.Health > 30;
		Bool Danger = CPlayer.Health > 0;
		//Bool Poison = ;

		DrawBar("HUD_ECG_1", "HUD_ECG", GetArmorAmount(), 100, (10, -32), 0, SHADER_HORZ, DI_ITEM_OFFSETS);
		DrawImage(OverHealth ? "RELINE50" : Fine ? "RELINE10" : Caution ? "RELINE20" : Danger ? "RELINE30" : "RELINE00", (12, -30), DI_ITEM_OFFSETS);

		Inventory AmmoType1, AmmoType2;
		[AmmoType1, AmmoType2] = GetCurrentAmmo();

		Int Ammo1_X = -13; // X = max - 10 / Y = max - 20
		Int Ammo3_X = -15;
		Int Ammo5_X = -21;

		Let Ammo_1a = CPlayer.mo.FindInventory("HandgunAmmo");
		Let Ammo_1b = CPlayer.mo.FindInventory("E_HandgunAmmo");

		Let Ammo_3a = CPlayer.mo.FindInventory("ShotgunShells");
		Let Ammo_3b = CPlayer.mo.FindInventory("E_ShotgunShells");

		Let Ammo_5a = CPlayer.mo.FindInventory("GrenadeRounds");
		Let Ammo_5b = CPlayer.mo.FindInventory("FlameRounds");
		Let Ammo_5c = CPlayer.mo.FindInventory("AcidRounds");
		Let Ammo_5d = CPlayer.mo.FindInventory("FreezeRounds");
		Let Ammo_5e = CPlayer.mo.FindInventory("MineRounds");
		Let Ammo_5f = CPlayer.mo.FindInventory("GasRounds");

		Bool Grenade_A = CPlayer.Mo.CountInv("GrenadeRounds");
		Bool Grenade_B = CPlayer.Mo.CountInv("FlameRounds");
		Bool Grenade_C = CPlayer.Mo.CountInv("AcidRounds");
		Bool Grenade_D = CPlayer.Mo.CountInv("FreezeRounds");
		Bool Grenade_E = CPlayer.Mo.CountInv("MineRounds");
		Bool Grenade_F = CPlayer.Mo.CountInv("GasRounds");		
		
		// Weapons
  		If(CPlayer.ReadyWeapon != null)
  		{
			Bool infAmmo = (sv_infiniteammo || CPlayer.mo.FindInventory('PowerInfiniteAmmo'));

			If(CheckWeaponSelected('CombatKnife')) { DrawImage("REFNUMX", (-21, -18), DI_ITEM_OFFSETS); }
			If(CheckWeaponSelected('Matilda'))
			{
				Let ptr = Matilda(CPlayer.mo.FindInventory('Matilda'));
				If(ptr.altammo)
				{
					For(int i = CPlayer.Mo.CountInv("WP1AmmoB"); i > 0; i--)
					{
						DrawImage("AMMO_1", (Ammo1_X, -29), DI_ITEM_OFFSETS);
						Ammo1_X = Ammo1_X - 4; // int AmmoMag = GetAmount("HandgunAmmo") / AmmoType1.MaxAmount;
					}
				}
				Else
				{
					For(int i = CPlayer.Mo.CountInv("WP1Ammo"); i > 0; i--)
					{
						DrawImage("AMMO_1", (Ammo1_X, -29), DI_ITEM_OFFSETS);
						Ammo1_X = Ammo1_X - 4;
					}
				}
				If(infAmmo) { DrawImage("REFNUMX", (-21, -18), DI_ITEM_OFFSETS); }
				Else If(ptr.altammo) { DrawString(mRE_StatusFont, FormatNumber(Ammo_1b.Amount, 3), (-11, -18), DI_TEXT_ALIGN_RIGHT, Font.CR_LIGHTBLUE); }
				Else { DrawString(mRE_StatusFont, FormatNumber(Ammo_1a.Amount, 3), (-11, -18), DI_TEXT_ALIGN_RIGHT, Font.CR_UNTRANSLATED); }
			}
			If(CheckWeaponSelected('LightningHawk'))
			{
				For(int i = CPlayer.Mo.CountInv("WP2Ammo"); i > 0; i--)
				{
					DrawImage("AMMO_2", (Ammo1_X, -30), DI_ITEM_OFFSETS);
					Ammo1_X = Ammo1_X - 4;
				}
			}
			If(CheckWeaponSelected('W870'))
			{
				Let ptr = W870(CPlayer.mo.FindInventory('W870'));
				If(ptr.altammo)
				{
					For(int i = CPlayer.Mo.CountInv("WP3AmmoB"); i > 0; i--)
					{
						DrawImage("AMMO_3B", (Ammo3_X, -34), DI_ITEM_OFFSETS);
						Ammo3_X = Ammo3_X - 6;
					}
				}
				Else
				{
					For(int i = CPlayer.Mo.CountInv("WP3Ammo"); i > 0; i--)
					{
						DrawImage("AMMO_3A", (Ammo3_X, -34), DI_ITEM_OFFSETS);
						Ammo3_X = Ammo3_X - 6;
					}
				}
				If(infAmmo) { DrawImage("REFNUMX", (-21, -18), DI_ITEM_OFFSETS); }
				Else If(ptr.altammo) { DrawString(mRE_StatusFont, FormatNumber(Ammo_3b.Amount, 3), (-11, -18), DI_TEXT_ALIGN_RIGHT, Font.CR_LIGHTBLUE); }
				Else { DrawString(mRE_StatusFont, FormatNumber(Ammo_3a.Amount, 3), (-11, -18), DI_TEXT_ALIGN_RIGHT, Font.CR_UNTRANSLATED); }
			}
			If(CheckWeaponSelected('MQ11'))// { DrawAmmoBar(16, Ammo1_X, 182, 2); }
			{
				for(int i = CPlayer.Mo.CountInv("WP4Ammo"); i > 0; i--)
				{
					DrawImage("AMMO_4", (Ammo1_X, -29), DI_ITEM_OFFSETS);
					Ammo1_X = Ammo1_X - 4;
				}
			}
			If(CheckWeaponSelected('GM79'))
			{
				Let ptr = GM79(CPlayer.mo.FindInventory('GM79'));

				If(CPlayer.ReadyWeapon.AmmoType2 is "GrenadeRounds" && CPlayer.Mo.CountInv("WP5Ammo"))
					{ DrawImage("AMMO_5A", (Ammo5_X - 80, -38), DI_ITEM_OFFSETS); }
				If(CPlayer.ReadyWeapon.AmmoType2 is "FlameRounds" && CPlayer.Mo.CountInv("WP5AmmoB"))
					{ DrawImage("AMMO_5B", (Ammo5_X - 60, -38), DI_ITEM_OFFSETS); }
				If(CPlayer.ReadyWeapon.AmmoType2 is "AcidRounds" && CPlayer.Mo.CountInv("WP5AmmoC"))
					{ DrawImage("AMMO_5C", (Ammo5_X - 40, -38), DI_ITEM_OFFSETS); }
				If(CPlayer.ReadyWeapon.AmmoType2 is "FreezeRounds" && CPlayer.Mo.CountInv("WP5AmmoD"))
					{ DrawImage("AMMO_5D", (Ammo5_X - 20, -38), DI_ITEM_OFFSETS); }
				//If(CPlayer.ReadyWeapon.AmmoType1 is "MineRounds" && Grenade_E && !ptr.noammo || CPlayer.ReadyWeapon.AmmoType1 is "MineRounds" && infAmmo && !ptr.noammo)
					//{ DrawImage("AMMO_5E", (Ammo5_X - 20, -38), DI_ITEM_OFFSETS); }
				If(CPlayer.ReadyWeapon.AmmoType2 is "GasRounds" && CPlayer.Mo.CountInv("WP5AmmoE"))
					{ DrawImage("AMMO_5F", (Ammo5_X, -38), DI_ITEM_OFFSETS); }

				If(infAmmo) { DrawImage("REFNUMX", (-101, -18), DI_ITEM_OFFSETS); }
					Else { DrawString(mRE_StatusFont, FormatNumber(Ammo_5a.Amount, 3), (-91, -18), DI_TEXT_ALIGN_RIGHT, Font.CR_WHITE); }
				If(infAmmo) { DrawImage("REFNUMX", (-81, -18), DI_ITEM_OFFSETS); }
					Else { DrawString(mRE_StatusFont, FormatNumber(Ammo_5b.Amount, 3), (-71, -18), DI_TEXT_ALIGN_RIGHT, Font.CR_RED); }
				If(infAmmo) { DrawImage("REFNUMX", (-61, -18), DI_ITEM_OFFSETS); }
					Else { DrawString(mRE_StatusFont, FormatNumber(Ammo_5c.Amount, 3), (-51, -18), DI_TEXT_ALIGN_RIGHT, Font.CR_YELLOW); }
				If(infAmmo) { DrawImage("REFNUMX", (-41, -18), DI_ITEM_OFFSETS); }
					Else { DrawString(mRE_StatusFont, FormatNumber(Ammo_5d.Amount, 3), (-31, -18), DI_TEXT_ALIGN_RIGHT, Font.CR_LIGHTBLUE); }
				//If(infAmmo) { DrawImage("REFNUMX", (330, 190), DI_ITEM_OFFSETS); }
					//Else { DrawString(mRE_StatusFont, FormatNumber(Ammo_5e.Amount, 3), (340, 190), DI_TEXT_ALIGN_RIGHT, Font.CR_BLACK); }
				If(infAmmo) { DrawImage("REFNUMX", (-21, -18), DI_ITEM_OFFSETS); }
					Else { DrawString(mRE_StatusFont, FormatNumber(Ammo_5f.Amount, 3), (-11, -18), DI_TEXT_ALIGN_RIGHT, Font.CR_GREEN); }
			}
			If(CheckWeaponSelected('ChemicalFlameThrower'))
				{ DrawString(mRE_StatusFont, String.Format("%d%%", CPlayer.Mo.CountInv("WP6Ammo") / 4), (-1, -28), DI_TEXT_ALIGN_RIGHT, Font.CR_UNTRANSLATED); }
			If(CheckWeaponSelected('SparkShot'))
				{ DrawString(mRE_StatusFont, String.Format("%d%%", CPlayer.Mo.CountInv("WPAAmmo") * 5), (-1, -28), DI_TEXT_ALIGN_RIGHT, Font.CR_UNTRANSLATED); }
			If(CheckWeaponSelected('ATRL'))
			{
				int amt = CPlayer.Mo.CountInv("WP7Ammo");
				String im = "AMMO_8_" .. amt;

				DrawImage(/*infAmmo ? "AMMO_8_4" :*/ im, (-55, -42), DI_ITEM_OFFSETS);

				//DrawAmmoBar(2, Ammo1_X, 175, 2);
			}

			If(CheckWeaponSelected('LightningHawk') || CheckWeaponSelected('MQ11') || CheckWeaponSelected('ChemicalFlameThrower') || CheckWeaponSelected('SparkShot') || CheckWeaponSelected('ATRL'))
			{
				If(infAmmo) { DrawImage("REFNUMX", (-21, -18), DI_ITEM_OFFSETS); }
				Else { DrawString(mRE_StatusFont, FormatNumber(AmmoType2.Amount, 3), (-11, -18), DI_TEXT_ALIGN_RIGHT, Font.CR_UNTRANSLATED); }
			}
		}

		If(!isInventoryBarVisible() && !level.NoInventoryBar && CPlayer.mo.InvSel != null)
		{
			DrawInventoryIcon(CPlayer.mo.InvSel, (124, -3), DI_DIMDEPLETED);
			If(CPlayer.mo.InvSel.Amount > 1) { DrawString(mAmountFont, FormatNumber(CPlayer.mo.InvSel.Amount, 3), (139, -7), DI_TEXT_ALIGN_RIGHT, Font.CR_GOLD); }
		}
		If(isInventoryBarVisible()) { DrawInventoryBar(diparms, (0, 0), 7, DI_SCREEN_CENTER_BOTTOM, HX_SHADOW); }
	
		//DrawBarKeys()
		bool locks[6];
		String image;
		for(int i = 0; i < 6; i++) locks[i] = CPlayer.mo.CheckKeys(i + 1, false, true);
		// key 1 Blue
		if (locks[1] && locks[4]) image = "STKEYS6";
		else if (locks[1]) image = "STKEYS0";
		else if (locks[4]) image = "STKEYS3";
		DrawImage(image, (15, -40), DI_ITEM_OFFSETS);
		// key 2 Yellow
		if (locks[2] && locks[5]) image = "STKEYS7";
		else if (locks[2]) image = "STKEYS1";
		else if (locks[5]) image = "STKEYS4";
		else image = "";
		DrawImage(image, (25, -40), DI_ITEM_OFFSETS);
		// key 3 Red
		if (locks[0] && locks[3]) image = "STKEYS8";
		else if (locks[0]) image = "STKEYS2";
		else if (locks[3]) image = "STKEYS5";
		else image = "";
		DrawImage(image, (35, -40), DI_ITEM_OFFSETS);
	}
}
