Class FirstAidSpray : Ammo
{
	Default
	{
		Tag "First Aid Spray";
		Inventory.PickupMessage "First Aid Spray";
		Inventory.PickupSound "misc/item_pkup";
		Inventory.UseSound "misc/item_use";
		Inventory.Icon "FAIDA0";
		Inventory.Amount 1;
		Inventory.MaxAmount 25;
        Inventory.InterHubAmount 25;
		+INVENTORY.INVBAR
		+INVENTORY.IGNORESKILL
		+INVENTORY.KEEPDEPLETED
	}
	override bool Use(bool pickup)
	{
		Let P = PlayerPawn(Owner);
		If(P && P.Health < P.MaxHealth && Self.Amount > 0)
		{
			P.GiveBody(-100);
			Owner.A_StartSound("misc/item_use",CHAN_ITEM);
			Self.Amount--;
		}
		Return False;
	}
	States
	{
	Spawn:
		FAID A 9;
		#### # 1 Bright;
		Loop;
	}
}

Class FirstAidBox : FirstAidSpray
{
	Default
	{
		Tag "First Aid Box";
		Inventory.PickupMessage "First Aid Box";
		Inventory.Amount 3;
	}
	States
	{
	Spawn:
		FAID B 9;
		#### # 1 Bright;
		Loop;
	}
}


Class MixedHerb_GG : Inventory
{
	Default
	{
		Tag "Mixed Herb (G+G)";
		Inventory.PickupMessage "Mixed Herb (G+G)";
		Inventory.PickupSound "misc/item_pkup";
		Inventory.UseSound "misc/item_use";
		Inventory.Icon "MHR1A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 25;
        Inventory.InterHubAmount 25;
		Scale 0.6;
		+INVENTORY.INVBAR
		+INVENTORY.IGNORESKILL
		+INVENTORY.KEEPDEPLETED
	}
	override bool Use(bool pickup)
	{
		Let P = PlayerPawn(Owner);
		If(P && P.Health < P.MaxHealth && Self.Amount > 0)
		{
			P.GiveBody(50, P.MaxHealth);
			Owner.A_StartSound("misc/item_use",CHAN_ITEM);
			Self.Amount--;
		}
		Return False;
	}
	States
	{
	Spawn:
		MHR1 A 9;
		#### # 1 Bright;
		Loop;
	}
}

Class MixedHerb_GGG : Inventory
{
	Default
	{
		Tag "Mixed Herb (G+G+G)";
		Inventory.PickupMessage "Mixed Herb (G+G+G)";
		Inventory.PickupSound "misc/item_pkup";
		Inventory.UseSound "misc/item_use";
		Inventory.Icon "MHR2A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 25;
        Inventory.InterHubAmount 25;
		Scale 0.6;
		+INVENTORY.INVBAR
		+INVENTORY.IGNORESKILL
		+INVENTORY.KEEPDEPLETED
	}
	override bool Use(bool pickup)
	{
		Let P = PlayerPawn(Owner);
		If(P && P.Health < P.MaxHealth && Self.Amount > 0)
		{
			P.GiveBody(-100);
			Owner.A_StartSound("misc/item_use",CHAN_ITEM);
			Self.Amount--;
		}
		Return False;
	}
	States
	{
	Spawn:
		MHR2 A 9;
		#### # 1 Bright;
		Loop;
	}
}

Class MixedHerb_GB : Inventory
{
	Default
	{
		Tag "Mixed Herb (G+B)";
		Inventory.PickupMessage "Mixed Herb (G+B)";
		Inventory.PickupSound "misc/item_pkup";
		Inventory.UseSound "misc/item_use";
		Inventory.Icon "MHR3A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 25;
        Inventory.InterHubAmount 25;
		Scale 0.6;
		+INVENTORY.INVBAR
		+INVENTORY.IGNORESKILL
		+INVENTORY.KEEPDEPLETED
	}
	override bool Use(bool pickup)
	{
		Let P = PlayerPawn(Owner);
		If(P && P.Health < P.MaxHealth && Self.Amount > 0)
		{
			Let blood = PlayerBleederItem(FindInventory("PlayerBleederItem"));
			If(blood)
			{
				blood.BLEEDS = false;
				blood.bleedbuildup = 0;
			}
			P.GiveBody(25, PlayerPawn(Owner).MaxHealth);
			Owner.A_StartSound("misc/item_use",CHAN_ITEM);
			P.A_GiveInventory("PowerBlueHerb");
			Self.Amount--;
		}
		Return False;
	}
	States
	{
	Spawn:
		MHR3 A 9;
		#### # 1 Bright;
		Loop;
	}
}

Class MixedHerb_GGB : Inventory
{
	Default
	{
		Tag "Mixed Herb (G+G+B)";
		Inventory.PickupMessage "Mixed Herb (G+G+B)";
		Inventory.PickupSound "misc/item_pkup";
		Inventory.UseSound "misc/item_use";
		Inventory.Icon "MHR4A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 25;
        Inventory.InterHubAmount 25;
		Scale 0.6;
		+INVENTORY.INVBAR
		+INVENTORY.IGNORESKILL
		+INVENTORY.KEEPDEPLETED
	}
	override bool Use(bool pickup)
	{
		Let P = PlayerPawn(Owner);
		If(P && P.Health < P.MaxHealth && Self.Amount > 0)
		{
			Let blood = PlayerBleederItem(FindInventory("PlayerBleederItem"));
			If(blood)
			{
				blood.BLEEDS = false;
				blood.bleedbuildup = 0;
			}
			P.GiveBody(50, PlayerPawn(Owner).MaxHealth);
			Owner.A_StartSound("misc/item_use",CHAN_ITEM);
			P.A_GiveInventory("PowerBlueHerb");
			Self.Amount--;
		}
		Return False;
	}
	States
	{
	Spawn:
		MHR4 A 9;
		#### # 1 Bright;
		Loop;
	}
}

Class MixedHerb_GR : Inventory
{
	Default
	{
		Tag "Mixed Herb (G+R)";
		Inventory.PickupMessage "Mixed Herb (G+R)";
		Inventory.PickupSound "misc/item_pkup";
		Inventory.UseSound "misc/item_use";
		Inventory.Icon "MHR5A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 25;
        Inventory.InterHubAmount 25;
		Scale 0.8;
		+INVENTORY.INVBAR
		+INVENTORY.IGNORESKILL
		+INVENTORY.KEEPDEPLETED
	}
	override bool Use(bool pickup)
	{
		Let P = PlayerPawn(Owner);
		If(P && P.Health < P.MaxHealth && Self.Amount > 0)
		{
			P.GiveBody(-100);
			Owner.A_StartSound("misc/item_use",CHAN_ITEM);
			Self.Amount--;
		}
		Return False;
	}
	States
	{
	Spawn:
		MHR5 A 9;
		#### # 1 Bright;
		Loop;
	}
}

Class MixedHerb_GRB : Inventory
{
	Default
	{
		Tag "Mixed Herb (G+R+B)";
		Inventory.PickupMessage "Mixed Herb (G+R+B)";
		Inventory.PickupSound "misc/item_pkup";
		Inventory.UseSound "misc/item_use";
		Inventory.Icon "MHR6A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 25;
        Inventory.InterHubAmount 25;
		Scale 0.6;
		+INVENTORY.INVBAR
		+INVENTORY.IGNORESKILL
		+INVENTORY.KEEPDEPLETED
	}
	override bool Use(bool pickup)
	{
		Let P = PlayerPawn(Owner);
		If(P && P.Health < P.MaxHealth && Self.Amount > 0)
		{
			Let blood = PlayerBleederItem(FindInventory("PlayerBleederItem"));
			If(blood)
			{
				blood.BLEEDS = false;
				blood.bleedbuildup = 0;
			}
			P.GiveBody(-100);
			Owner.A_StartSound("misc/item_use",CHAN_ITEM);
			P.A_GiveInventory("PowerBlueHerb");
			Self.Amount--;
		}
		Return False;
	}
	States
	{
	Spawn:
		MHR6 A 9;
		#### # 1 Bright;
		Loop;
	}
}

Class MixedHerb_GY : Inventory
{
	Int MaxHPBonus;
	Property MaxHPBonus : MaxHPBonus;

	Int MaxHPBonusLimit;
	Property MaxHPBonusLimit : MaxHPBonusLimit;

	Default
	{
		Tag "Mixed Herb (G+Y)";
		Inventory.PickupMessage "Mixed Herb (G+Y)";
		Inventory.PickupSound "misc/item_pkup";
		Inventory.UseSound "misc/item_use";
		Inventory.Icon "MHR7A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 25;
        Inventory.InterHubAmount 25;
		Scale 0.6;
		+INVENTORY.INVBAR
		+INVENTORY.IGNORESKILL
		+INVENTORY.KEEPDEPLETED

		MixedHerb_GY.MaxHPBonus 10; 
		MixedHerb_GY.MaxHPBonusLimit 50;
	}
	override bool Use(bool pickup)
	{
		Let P = PlayerPawn(Owner);
		If(P && P.Health < 150 && Self.Amount > 0)
		{
			P.BonusHealth = Clamp(P.BonusHealth + MaxHPBonus, 0, MaxHPBonusLimit);
			P.GiveBody(25, PlayerPawn(Owner).MaxHealth);
			Owner.A_StartSound("misc/item_use",CHAN_ITEM);
			Self.Amount--;
		}
		Return False;
	}
	States
	{
	Spawn:
		MHR7 A 9;
		#### # 1 Bright;
		Loop;
	}
}

Class MixedHerb_GRY : Inventory
{
	Int MaxHPBonus;
	Property MaxHPBonus : MaxHPBonus;

	Int MaxHPBonusLimit;
	Property MaxHPBonusLimit : MaxHPBonusLimit;

	Default
	{
		Tag "Mixed Herb (G+R+Y)";
		Inventory.PickupMessage "Mixed Herb (G+R+Y)";
		Inventory.PickupSound "misc/item_pkup";
		Inventory.Icon "MHR8A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 25;
        Inventory.InterHubAmount 25;
		Scale 0.6;
		+INVENTORY.INVBAR
		+INVENTORY.IGNORESKILL
		+INVENTORY.KEEPDEPLETED

		MixedHerb_GRY.MaxHPBonus 10; 
		MixedHerb_GRY.MaxHPBonusLimit 50;
	}
	override bool Use(bool pickup)
	{
		Let P = PlayerPawn(Owner);
		If(P && P.Health < 150 && Self.Amount > 0)
		{
			P.BonusHealth = Clamp(P.BonusHealth + MaxHPBonus, 0, MaxHPBonusLimit);
			P.GiveBody(100, PlayerPawn(Owner).MaxHealth);
			Owner.A_StartSound("misc/item_use",CHAN_ITEM);
			Self.Amount--;
		}
		Return False;
	}
	States
	{
	Spawn:
		MHR8 A 9;
		#### # 1 Bright;
		Loop;
	}
}

Class MixedHerb_RB : Inventory
{
	Default
	{
		Tag "Mixed Herb (R+B)";
		Inventory.PickupMessage "Mixed Herb (R+B)";
		Inventory.PickupSound "misc/item_pkup";
		Inventory.Icon "MHR9A0";
		Inventory.Amount 1;
		Inventory.MaxAmount 25;
        Inventory.InterHubAmount 25;
		Scale 0.6;
		+INVENTORY.INVBAR
		+INVENTORY.IGNORESKILL
		+INVENTORY.KEEPDEPLETED
	}
	override bool Use(bool pickup)
	{
		Let P = PlayerPawn(Owner);
		If(P && P.Health < P.MaxHealth && Self.Amount > 0)
		{
			Let blood = PlayerBleederItem(FindInventory("PlayerBleederItem"));
			If(blood)
			{
				blood.BLEEDS = false;
				blood.bleedbuildup = 0;
			}
			Owner.A_StartSound("misc/item_use",CHAN_ITEM);
			P.A_GiveInventory("PowerBlueHerb");
			P.A_StartSound("misc/item_use",CHAN_ITEM);
			Self.Amount--;
		}
		Return False;
	}
	States
	{
	Spawn:
		MHR9 A 9;
		#### # 1 Bright;
		Loop;
	}
}
