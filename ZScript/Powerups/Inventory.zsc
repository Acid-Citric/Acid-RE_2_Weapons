Class Lighter : CustomInventory
{
	Default
	{
		Inventory.Amount 1;
		Inventory.MaxAmount 1;
		Inventory.InterHubAmount 1;
		+INVENTORY.INVBAR
		+INVENTORY.UNDROPPABLE
		Inventory.PickupMessage "Lighter";
 		Inventory.PickupSound "misc/item_pkup";
		Inventory.Icon "BRITA0";
		Tag "Lighter";
		Scale 0.5;
	}
	Override Void DoEffect()
	{
		If(owner.CountInv("PowerLighter")) { Icon = TexMan.CheckForTexture("BRITB0", TexMan.Type_Sprite); }
		Else { Icon = GetDefaultByType("Lighter").Icon; }
		Super.DoEffect();
		return;
	}
	States
	{
	Spawn:
		BRIT A -1;
		Stop;
	Use:
		TNT1 A 0
		{
			// A_StartSound("Tinker/Tink",CHAN_ITEM,volume: 0.7);
			If(!CountInv("PowerLighter"))
			{
				A_GiveInventory("PowerLighter",1);
				A_SpawnItemEx("LighterSticker",0,0,0,0,0,0,0,SXF_SETTARGET);
			}
			Else { A_TakeInventory("PowerLighter",1); }
		}
		Fail;
	}
}

Class LighterSticker : Actor
{
	Default
	{
		PROJECTILE;
		+NOINTERACTION
		+NOTIMEFREEZE
	}
	States
	{
	Spawn:
		TNT1 A 1 NoDelay
		{
			A_SetBlend("Orange",0.1,10);
			// A_StartSound("Flare/Loop",5,0.2,1);
			A_Warp(AAPTR_TARGET,0,0,0,0,WARPF_NOCHECKPOSITION|WARPF_INTERPOLATE);
		}
		TNT1 A 0 A_JumpIf(CountInv("PowerLighter",AAPTR_TARGET), "Spawn");
	End:
		TNT1 A 0 A_StopSound(5);
		Stop;
	}
}

Class PowerLighter : PowerDamage
{
	Default
	{
		+INVENTORY.HUBPOWER
		+INVENTORY.PERSISTENTPOWER
		Powerup.Duration 0x7FFFFFFF; // set '0x7FFFFFFD' instead of '0x7FFFFFFF' to work with PowerTimeFreezer properly.
		DamageFactor "Normal", 1.0;
	}
}