Class ATRL : REWeapon
{
	Default
	{
		Inventory.Icon "WP7PA0";

		Height 20;
		Weapon.SelectionOrder 2800;
		Weapon.AmmoType "WP7Ammo";
		Weapon.AmmoType2 "Rockets";
		Inventory.PickupMessage "M66 Rocket Launcher";
		Tag "M66 Rocket Launcher";
		Scale 0.7;
	}
	Override Void AttachToOwner(Actor other)
	{
		Super.AttachToOwner(other);
		other.A_GiveInventory("WP7Ammo", MAG_M202);
	}
    Override Bool TryPickup(in out Actor toucher)
    {
		If(toucher)
		{
			Let weap = toucher.FindInventory("ATRL");
			If(!weap) { Self.AmmoGive2 = 0; }
			Else { Self.AmmoGive2 = MAG_M202; }
		}
			Return Super.TryPickup(toucher);
    }
	States
	{
	Spawn:
		WP7P A 9;
		#### # 1 Bright;
		Loop;
	Select:
		WP7G A 0;
		Goto Raise;
	Ready:
		WP7G A 1 A_WeaponReady();
		Loop;
	Deselect:
		#### # 0;
		Goto Lower;
	Fire:
		TNT1 A 0 A_JumpIf(!CountInv("WP7Ammo"), "Reload");
		WP7G A 1 Bright
		{
			A_AlertMonsters();
			
			If(CountInv("WP7Ammo") == 4) { A_FireProjectile("ATRocket",frandom(-1,1),False,15,5); A_TakeInventory("WP7Ammo",1); } // L U 
			Else If(CountInv("WP7Ammo") == 3) { A_FireProjectile("ATRocket",frandom(-1,1),False,20,5); A_TakeInventory("WP7Ammo",1); } // R U
			Else If(CountInv("WP7Ammo") == 2) { A_FireProjectile("ATRocket",frandom(-1,1),False,15,-3); A_TakeInventory("WP7Ammo",1); } // L D
			Else If(CountInv("WP7Ammo") == 1) { A_FireProjectile("ATRocket",frandom(-1,1),False,20,-3); A_TakeInventory("WP7Ammo",1); } // R D

			/*let proj = A_FireProjectile("Rocket",spawnofs_xy:8);
			if (proj)
			{
				proj.vel *= 2.5;
				proj.scale *= 0.38;
			}*/

		}
		#### A 1 Bright;
		#### A 2 A_WeaponOffset(Random(12,16),Random(48,48),WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(Random(10,12),Random(46,46),WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(Random(8,10),Random(44,42),WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(Random(6,8),Random(42,40),WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(Random(5,6),Random(40,38),WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(Random(3,4),Random(38,36),WOF_INTERPOLATE);
		#### A 1 A_WeaponOffset(2,Random(36,34),WOF_INTERPOLATE);
		#### A 1 { A_WeaponOffset(1,Random(34,33),WOF_INTERPOLATE); A_WeaponReady(); }
		#### A 1 { A_WeaponOffset(0,32,WOF_INTERPOLATE); A_WeaponReady(); }
		#### A 6 { A_WeaponOffset(0,32,WOF_INTERPOLATE); A_WeaponReady(); }
		#### A 0;
		Goto Ready;

	Reload:
		TNT1 A 0 A_JumpIf(CountInv("WP7Ammo") == 4, 2);
		TNT1 A 0 A_JumpIf(CountInv("Rockets") > 0 || CountInv("PowerInfiniteAmmo"), "ReloadWork");
		TNT1 A 0;
		Goto Ready;
	ReloadWork:
		WP7G A 1 { A_OverlayOffset(PSP_WEAPON, 2, 34, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.99, 0.99); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 7, 39, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.98, 0.98); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 10, 47, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.97, 0.97); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 22, 58, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.96, 0.96); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 32, 69, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.94, 0.94); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 54, 81, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.92, 0.92); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 67, 100, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.9, 0.9); }
		TNT1 A 2;
		TNT1 A 2 A_StartSound("weapons/sshoto",CHAN_WEAPON);
		TNT1 A 20;
		TNT1 A 1 A_StartSound("weapons/sshotl",CHAN_WEAPON);
	ReloadLoop:
		TNT1 A 0
		{
            While(CountInv("Rockets") >= 0 && CountInv("WP7Ammo") < 4)
			{
				If(!CountInv("PowerInfiniteAmmo")) { A_TakeInventory("Rockets",1,TIF_NOTAKEINFINITE); }
				A_GiveInventory("WP7Ammo",1);
			}
		}
		Goto ReloadFinish;
	ReloadFinish:
		TNT1 A 20;
		TNT1 A 1 A_StartSound("weapons/sshotc",CHAN_WEAPON);
		TNT1 A 12;
		WP7G A 1 { A_OverlayOffset(PSP_WEAPON, 67, 100, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.9, 0.9); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 54, 81, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.92, 0.92); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 32, 69, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.94, 0.94); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 22, 58, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.96, 0.96); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 10, 47, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.97, 0.97); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 7, 39, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.98, 0.98); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 2, 34, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 0.99, 0.99); }
		#### # 1 { A_OverlayOffset(PSP_WEAPON, 0, 32, WOF_INTERPOLATE); A_OverlayScale(PSP_WEAPON, 1, 1); }
		Goto Ready;
	}
}

Class WP7Ammo : Ammo
{
	Default
	{
		Inventory.MaxAmount MAG_M202;
		+INVENTORY.IGNORESKILL
	}
}

Class Rockets : Ammo
{
	Default
	{
		Inventory.MaxAmount MAG_DE;
		+INVENTORY.IGNORESKILL
	}
}

Class ATRocket : Rocket
{
	Default
	{
		Speed 50; // * 2.5
		-ROCKETTRAIL
		Scale 0.8;
		DeathSound "M202/Explosion";
	}
	States
	{
	Death:
		TNT1 A 0
		{
			If(WaterLevel >= 2) { return; }
			Else { For(int i = 0; i < 30; i++) { A_SpawnItemEx("BurningFlames", random(0, 45), random(0, 55), 0, 0, 0, 0, random(0, 360)); } }
		}
		TNT1 A 1 A_Explode(256,256,XF_HURTSOURCE);
		TNT1 A 0 A_JumpIf(WaterLevel >= 2, 15);		
		EXP1 A 2 BRIGHT
		{
			{ bNOGRAVITY = True; bSPRITEFLIP = Random(0,1); }
			A_SetScale(1.0,1.0);
			A_SetTranslucent(0.85,1);
		}		 
		#### BCDEFGHIJKL 2 BRIGHT;
		#### M 2 BRIGHT A_SetTranslucent(0.55,1);
		#### N 2 BRIGHT A_SetTranslucent(0.20,1);
		TNT1 A 0;
		Stop;
	}
}
