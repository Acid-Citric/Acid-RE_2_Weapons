Class W870 : REWeapon
{
	Default
	{
		Inventory.Icon "WP3PA0";

		Weapon.SelectionOrder 1300;
		Weapon.AmmoType "WP3Ammo";
		Weapon.AmmoType2 "ShotgunShells";
		+WEAPON.NOALERT
		Inventory.PickupMessage "W-870";
		Obituary "$OB_MPSHOTGUN";
		Tag "W-870";
		Scale 0.35;
	}
	Override Void AttachToOwner(Actor other)
	{
		Super.AttachToOwner(other);
		other.A_GiveInventory("WP3Ammo",MAG_VP70);
	}
	Override Bool TryPickup(in out Actor toucher)
	{
		If(toucher)
		{
			Let weap = toucher.FindInventory("W870");
			If(!weap) { Self.AmmoGive2 = 0; }
			Else { Self.AmmoGive2 = MAG_W870; }
		}
			Return Super.TryPickup(toucher);
	}
	Override Bool HandlePickup(Inventory i)
	{
		//save ammo
		let old_ammo2 = ammo2;
		let old_ammotype2 = ammotype2;

		//set ammo to pickup ammo type
		ammo2 = Ammo(owner.FindInventory("ShotgunShells"));
		ammotype2 = "ShotgunShells";

		bool ok = super.HandlePickup(i);

		//restore ammo
		ammo2 = old_ammo2;
		ammotype2 = old_ammotype2;

		return ok;
	}
	int shotgunempty; // 1 = shotgun is empty, load the chamber. 2 = the shotgun's chamber is loaded.
	bool shotgunreload, altammo;
	States
	{
	Spawn:
		WP3P A 9;
		#### # 1 Bright;
		Loop;
	Select:
		WP3G A 0;
		Goto Raise;
	Ready:
		WP3G A 1 A_WeaponReady(WRF_ALLOWRELOAD|WRF_ALLOWUSER1);
		Loop;
	Deselect:
		#### # 0 { Invoker.shotgunreload = False; }
		Goto Lower;
	Fire:
		TNT1 A 0 A_JumpIf(Invoker.ammo1.amount == 0, "Reload");
		TNT1 A 0 A_JumpIf(Invoker.shotgunempty == 2, "FinishReload_2");
		TNT1 A 0 A_JumpIf(Invoker.shotgunreload, "FinishReload");
		WP3F A 3
		{
			A_AlertMonsters();

			If(Invoker.altammo) { A_FireBullets(0, 0, 1, random(40,75), "SuperPuff"); A_ChangeVelocity(Cos(Pitch) * -0.28, 0, Sin(Pitch) * 0.28, CVF_Relative); }
            Else { A_FireBullets(3, 3, 8, random(8,13), "BulletPuff"); }

			A_StartSound("Weapons/W870/Fire", CHAN_WEAPON);

			A_SetPitch(Pitch - 0.72, SPF_INTERPOLATE); // -72 % = 28 pts of stability
			A_QuakeEX(4,4,4,5,0,10, "None", QF_SCALEDOWN);

			A_TakeInventory(Invoker.ammo1.GetClass(), 1);
		}
		#### BCDEE 2;
		#### F 2 A_StartSound("Weapons/W870/Pump",CHAN_WEAPON);
		#### G 2 A_SpawnItemEx(Invoker.altammo ? "RE_ShotgunCasing_B" : "RE_ShotgunCasing",16,6,36*GetCrouchFactor(AAPTR_Default),1,-5,1,0,SXF_NOCHECKPOSITION|SXF_TRANSFERPITCH);
		#### G 0 A_JumpIf(Invoker.ammo1.amount > 0, 1);
		Goto Fire+16;
		WPEF # 0 A_JumpIf(Invoker.altammo, 2);
		WP3F # 0;
		#### H 2;
		WP3F I 2;
		WP3G A 3;
		Goto Ready;
	Flash:
		TNT1 A 0;
		Goto LightDone;
	
	Reload:
		TNT1 A 0 A_JumpIf(Invoker.ammo1.amount == MAG_W870, "Ready");
		TNT1 A 0 A_JumpIf(Invoker.ammo1.amount >= 1, "ReloadWork");
		TNT1 A 0 { Invoker.shotgunempty++; } // 1
	ReloadWork:
		TNT1 A 0 A_JumpIf(invoker.ammo2.amount > 0 || CountInv("PowerInfiniteAmmo"), "ReloadWork_2");
		TNT1 A 0 A_JumpIf(Invoker.shotgunempty == 1 && Invoker.ammo1.amount == 0 && Invoker.ammo2.amount == 0, "Reset");
		Goto Ready; //
	ReloadWork_2:
		TNT1 A 0 { Invoker.shotgunreload = True; }
		TNT1 A 0 A_JumpIf(Invoker.shotgunempty == 1 && Invoker.ammo1.amount == 0 && Invoker.ammo2.amount > 0 || CountInv("PowerInfiniteAmmo"), "LoadChamber");
		WP3F I 3;
		WP3R NOPQR 3;
	ReloadLoop:
		TNT1 A 0 A_JumpIf(Invoker.ammo1.amount == MAG_W870 || Invoker.ammo2.amount < 1 && !CountInv("PowerInfiniteAmmo"), "FinishReload");
		WP3R R 2;
		WPER # 0 A_JumpIf(Invoker.altammo, 2);
		WP3R # 0;
		#### ST 2;
		#### U 2
		{
			A_StartSound("Weapons/W870/Reload",CHAN_WEAPON);
			If(!CountInv("PowerInfiniteAmmo")) { TakeInventory(Invoker.ammo2.GetClass(), 1, False, True); }
			GiveInventory(Invoker.ammo1.GetClass(), 1);
		}
		WP3R V 4 A_WeaponReady(WRF_NOBOB);
		TNT1 A 0 A_JumpIf(Invoker.ammo1.amount == MAG_W870 || Invoker.ammo2.amount < 1 && !CountInv("PowerInfiniteAmmo"), "FinishReload");
		Goto ReloadLoop;
	FinishReload:
		WP3R WX 3;
	FinishReload_2:
		WP3F I 3;
		WP3G A 6;
		TNT1 A 0 { Invoker.shotgunempty = 0; Invoker.shotgunreload = False; }
		Goto Ready;
	LoadChamber:
		WP3G A 2;
		WP3R A 2 A_StartSound("Weapons/W870/Pump",CHAN_WEAPON);
		WP3R BCDEF 2;
		WPER # 0 A_JumpIf(Invoker.altammo, 2);
		WP3R # 0;
		#### GHI 2;
		WP3R J 2
		{
			A_StartSound("Weapons/W870/Reload",CHAN_WEAPON);
			If(!CountInv("PowerInfiniteAmmo")) { TakeInventory(Invoker.ammo2.GetClass(), 1, False, True); }
			GiveInventory(Invoker.ammo1.GetClass(), 1);

			Invoker.shotgunempty++; // 2
		}
		WPER # 0 A_JumpIf(Invoker.altammo, 2);
		WP3R # 0;
		#### KLM 2;
		WP3R N 2
		{
			A_StartSound("Weapons/W870/Pump",CHAN_WEAPON);
			A_WeaponReady(WRF_NOBOB);
		}
		TNT1 A 0 A_JumpIf(Invoker.ammo2.amount > 0 || CountInv("PowerInfiniteAmmo"), 1);
        Goto FinishReload+1;
		WP3R OPQ 2;
		Goto ReloadLoop;

	User1:
		WP3G A 1;
		TNT1 A 0 A_JumpIf((CountInv("ShotgunShells") > 0 && CountInv("E_ShotgunShells") > 0) || CountInv("PowerInfiniteAmmo"), 1);
		Goto Ready;
		#### # 2
		{
			int final_ammo = invoker.ammo2.amount + invoker.ammo1.amount;

			if(final_ammo > invoker.ammo2.maxamount)
			{
				int leftover = final_ammo - invoker.ammo2.maxamount;

				invoker.ammo2.amount = invoker.ammo2.maxamount;
				invoker.ammo1.amount = 0;

				A_DropItem(invoker.ammotype2, leftover);
			}
			else
			{
				invoker.ammo2.amount = final_ammo;
				invoker.ammo1.amount = 0;
			}
		}
		#### # 2
		{
			If(Invoker.altammo == True)
			{
				Invoker.altammo = False;
				SetAmmoType1(True, "WP3Ammo");
				SetAmmoType2(True, "ShotgunShells");
			}
            Else If(Invoker.altammo == False)
			{
				Invoker.altammo = True;
				SetAmmoType1(True, "WP3AmmoB");
				SetAmmoType2(True, "E_ShotgunShells");
			}
		}
		Goto Reload;
	Reset:
		TNT1 A 0 { Invoker.shotgunempty = 0; }
        Goto Ready;
	}
}

Class WP3Ammo : Ammo
{
	Default
	{
		Inventory.MaxAmount MAG_W870;
		+INVENTORY.IGNORESKILL
	}
}

Class WP3AmmoB : Ammo
{
	Default
	{
		Inventory.MaxAmount MAG_W870;
		+INVENTORY.IGNORESKILL
	}
}
