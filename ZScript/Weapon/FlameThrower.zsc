Class ChemicalFlameThrower : REWeapon // "Kill it with fire before it lays eggs!"
{
	Default
	{
		Inventory.Icon "WP6PA0";

		Weapon.SelectionOrder 100;
		Weapon.AmmoType "WP6Ammo";
		Weapon.AmmoType2 "Fuel";
		Inventory.PickupMessage "FlameThrower";
		Tag "FlameThrower";
		Scale 0.3;
	}
	Override Void AttachToOwner(Actor other)
	{
		Super.AttachToOwner(other);
		other.A_GiveInventory("WP6Ammo",MAG_FLAME);
	}
	Override Bool TryPickup(in out Actor toucher)
	{
		If(toucher)
		{
			Let weap = toucher.FindInventory("ChemicalFlameThrower");
			If(!weap) { Self.AmmoGive2 = 0; }
			Else { Self.AmmoGive2 = MAG_FLAME; }
		}
			Return Super.TryPickup(toucher);
	}
	States
	{
	Spawn:
		WP6P A 9;
		#### # 1 Bright;
		Loop;
	Select:
		WP6G A 0;
		Goto Raise;
	Ready:
		WP6G A 1
		{
			If(WaterLevel > 1) A_WeaponReady(WRF_NOFIRE|WRF_ALLOWRELOAD);
			Else A_WeaponReady(WRF_ALLOWRELOAD);
		}
		Loop;
	Deselect:
		#### # 0;
		Goto Lower;
	Fire:
		TNT1 A 0 A_JumpIf(WaterLevel >= 2, "Empty");
		TNT1 A 0 A_JumpIf(!CountInv("WP6Ammo"), "Reload");
		WP6G A 1 Bright
		{
			A_AlertMonsters();
			A_FireProjectile("FlameThrowerProj",2,False,2,5);
			A_TakeInventory("WP6Ammo",2);
			
			A_SetPitch(Pitch - 1.0, SPF_INTERPOLATE);
		}
		#### A 1 Bright A_SetPitch(Pitch + 1, SPF_INTERPOLATE);
		#### A 0 A_ReFire();		
		Goto Ready;

	Empty:
		WP6G A 0 A_StartSound("Weapons/Flamer/Dry", CHAN_WEAPON);
		#### A 3 A_WeaponReady(WRF_NOFIRE);
		Goto Ready;

	Reload:
		TNT1 A 0 A_JumpIfInventory("WP6Ammo", MAG_FLAME, "Ready");
		TNT1 A 0 A_JumpIf(CountInv("Fuel") > 0 || CountInv("PowerInfiniteAmmo"), "ReloadWork");
		TNT1 A 0;
		Goto Empty;
	ReloadWork:
		// 80 tics
		WP6G AAAAAAA 1 // 7 tics
		{
			//Tilt the gun to the right, offset and scale it:
			A_OverlayRotate(PSP_WEAPON,-2,WOF_ADD);
			A_OverlayOffset(PSP_WEAPON,6,3,WOF_ADD);
			A_OverlayScale(PSP_WEAPON,0.015,0.015,WOF_ADD);
		}
		#### B 35 A_StartSound("weapons/sshoto",CHAN_AUTO);
		#### B 15 A_StartSound("weapons/sshotl",CHAN_AUTO);
		#### B 0
		{
			While(CountInv("Fuel") >= 0 && CountInv("WP6Ammo") < MAG_FLAME)	
			{
				If(!CountInv("PowerInfiniteAmmo")) { A_TakeInventory("Fuel", 1, TIF_NOTAKEINFINITE); }
				A_GiveInventory("WP6Ammo", 1);
			}
		}
		#### B 16 A_StartSound("weapons/sshotc",CHAN_AUTO);
		#### AAAAAAA 1 // 7 tics
		{
			//Restore the gun's angle, offset and scale:
			A_OverlayRotate(PSP_WEAPON,2,WOF_ADD);
			A_OverlayOffset(PSP_WEAPON,-6,-3,WOF_ADD);
			A_OverlayScale(PSP_WEAPON,-0.015,-0.015,WOF_ADD);
		}	
		Goto Ready;
	}
}

Class WP6Ammo : Ammo
{
	Default
	{
		Inventory.MaxAmount MAG_FLAME;
		+INVENTORY.IGNORESKILL
	}
}

Class FlameThrowerProj : FastMissile
{
	Default
	{
		Radius 36.5;
		Height 60;
		FastMissile.RadiusScale 0.1;
		FastMissile.HeightScale 0.1;
		FastMissile.RadiusScaleFactor 0.03;
		FastMissile.HeightScaleFactor 0.03;
		
		FastMissile.DOTType "BurnDOT";
		
		Scale 0.25;
		FastMissile.XScaleFactor 0.03;
		FastMissile.YScaleFactor 0.03;
		
		DamageFunction 6;
		DamageType "Fire";
		Speed 20;
		RenderStyle "Add";
		Alpha 0.7;
		Obituary "%o was burned to death by %k.";
		
		+FORCEXYBILLBOARD
		+BLOODLESSIMPACT
		+PAINLESS
		+FASTMISSILE.HITONCE
		SeeSound "Weapons/Flamer/Fire"; //"weapons/rocklf"
		DeathSound "Weapons/Flamer/Hit"; //"vile/firecrkl"
	}
	States
	{
	Spawn:
		TNT1 A 2 A_JumpIf(WaterLevel > 1, "Nope");
		FRPT ABCDEFG 2 A_JumpIf(WaterLevel > 1, "Nope");
		Stop;
	Nope:
		TNT1 A 0;
		Stop;
	}
}

class BurnDOT : CustomDOT
{
	Default
	{
		DamageType "Fire";
		CustomDOT.EffectRate 4;
		CustomDOT.EffectActor "FlameEffect";
		Inventory.MaxAmount 7;
		DamageFunction 5;
		
		+PAINLESS
	}
}

class FlameEffect : DOTEffect
{
	Default
	{
		RenderStyle "Add";
		Alpha 0.4;
		Scale 0.2;
		
		+DOTEFFECT.NOWARP
	}
	
	States
	{
	Spawn:
		FRPT ABCDEFG 2 Bright;
		Stop;
	}
	
	override void Effect()
	{
		scale.x -= min(0.01, scale.x);
		scale.y -= min(0.01, scale.y);
	}
}

class FireAoE : AoE
{
	static const String noSpawn[] =
	{
		"FWATER1", "FWATER2", "FWATER3", "FWATER4",
		"BLOOD1", "BLOOD2", "BLOOD3"
	};
	
	Default
	{
		Radius 16;
		Height 24;
		DamageFunction 5;
		DamageType "Fire";
		
		AoE.DOTType "BurnDOT";
		AoE.EffectRate 4;
		AoE.EffectActor "GroundFireFlame";
		
		+PAINLESS
		+AOE.NOLIQUIDS
	}
	
	States
	{
	Spawn:
		TNT1 A 70;
		Stop;
	}
	
	override void BeginPlay()
	{
		super.BeginPlay();
		
		TextureID offLimits;
		for (int i = 0; i < noSpawn.Size(); ++i)
		{
			offLimits = TexMan.CheckForTexture(noSpawn[i], TexMan.Type_Flat);
			if (floorpic == offLimits)
			{
				Destroy();
				return;
			}
		}
	}
}

class GroundFireFlame : Actor
{
	Default
	{
		RenderStyle "Add";
		Alpha 0.4;
		Scale 0.3;
		
		+NOINTERACTION
	}
	
	States
	{
	Spawn:
		FRPT ABCDEFG 2 Bright;
		Stop;
	}
	
	override void Tick()
	{
		super.Tick();
		
		if (bDestroyed || IsFrozen())
			return;
		
		scale.x -= min(0.02, scale.x);
		scale.y -= min(0.02, scale.y);
	}
}
