Class RE2Handler : EventHandler
{
	/*Override Void PlayerSpawned(PlayerEvent e)
	{
		PlayerInfo player = players[e.PlayerNumber];
		player.mo.A_SetBlend("0 0 0",1.0,105);
	}
	Override Void PlayerDied(PlayerEvent e)
	{
		PlayerInfo player = players[e.PlayerNumber];
		player.mo.GiveInventory("BackInBlack",1);
	}*/
	Override Void PlayerRespawned(PlayerEvent e)
	{
		PlayerInfo player = players[e.PlayerNumber];
		player.mo.TakeInventory("FireDeathEffect", 1);
	}

	Override Void WorldThingSpawned(WorldEvent e)
	{
		If (e.Thing is "PlayerPawn" && !e.Thing.FindInventory("Matilda") || e.Thing is "PlayerPawn" && e.Thing.FindInventory("Matilda"))
		{ e.Thing.GiveInventory("WP1AmmoB",0); e.Thing.GiveInventory("E_HandgunAmmo",0); }

		If (e.Thing is "PlayerPawn" && !e.Thing.FindInventory("W870") || e.Thing is "PlayerPawn" && e.Thing.FindInventory("W870"))
		{ e.Thing.GiveInventory("WP3AmmoB",0); e.Thing.GiveInventory("E_ShotgunShells",0); }

		If (e.Thing is "PlayerPawn" && !e.Thing.FindInventory("GM79"))
		{
			e.Thing.GiveInventory("WP5AmmoB",0);
			e.Thing.GiveInventory("FlameRounds",0);
			
			e.Thing.GiveInventory("WP5AmmoC",0);
			e.Thing.GiveInventory("AcidRounds",0);
			
			e.Thing.GiveInventory("WP5AmmoD",0);
			e.Thing.GiveInventory("FreezeRounds",0);
			
			//e.Thing.GiveInventory("MineRounds",0);
			
			e.Thing.GiveInventory("WP5AmmoE",0);
			e.Thing.GiveInventory("GasRounds",0);
		}
	}

    Override Void WorldThingDied(WorldEvent e) // Credits to jarewill on the ZDoom Forums
	{
   	     If (e.Inflictor && e.Inflictor.DamageType == "Fire") { e.Thing.GiveInventory("FireDeathEffect",1); }
	}

	Override Void CheckReplacement(ReplaceEvent e)
	{
		class<Actor> cls = e.Replacee;

		If (cls == 'Fist')							e.Replacement = "CombatKnife";
		Else If (cls == 'Chainsaw')						e.Replacement = "SparkShot";
		Else If (cls == 'Pistol')						e.Replacement = "Matilda";
		Else If (cls == 'Shotgun')					 e.Replacement = "ShotgunDrop";
		Else If (cls == 'SuperShotgun')						e.Replacement = "LightningHawk";
		Else If (cls == 'Chaingun')						e.Replacement = "MQ11";
		Else If (cls == 'RocketLauncher')					e.Replacement = "GM79";
		Else If (cls == 'PlasmaRifle')						e.Replacement = "ChemicalFlameThrower";
		Else If (cls == 'BFG9000')						e.Replacement = "ATRL";

		Else If ((cls == 'HealthBonus') || (cls == 'ArmorBonus'))		e.Replacement = "BonusSpawner";
		Else If (cls == 'Stimpack')						e.Replacement = "StimpackSpawner";
		Else If (cls == 'Medikit')						e.Replacement = "MedikitSpawner";
		Else If ((cls == 'SoulSphere') || (cls == 'MegaSphere'))		e.Replacement = "SoulSphereSpawner";

		Else If ((cls == 'GreenArmor') || (cls == 'BlueArmor'))						e.Replacement = "ArmorSpawner";

		// Else If (e.Replacee == "RadSuit")						e.Replacement = "BlueHerb";
		Else If (cls == 'Infrared')						e.Replacement = "MedikitSpawner";
		// Else If (e.Replacee == 'AllMap')						e.Replacement = "AllMap";
		// Else If (e.Replacee == 'InvulnerabilitySphere')				e.Replacement = "InvulnerabilitySphere";
		Else If ((cls == 'BlurSphere') || (cls == 'Berserk'))		e.Replacement = "MedikitSpawner";

		Else If ((cls == 'Clip') || (cls == 'ClipBox'))			e.Replacement = "ClipSpawner";
		Else If ((cls == 'Shell') || (cls == 'ShellBox'))			e.Replacement = "ShellSpawner";
		Else If ((cls == 'RocketAmmo') || (cls == 'RocketBox'))		e.Replacement = "RocketAmmoSpawner";
		Else If ((cls == 'Cell') || (cls == 'CellPack'))			e.Replacement = "CellSpawner";
		Else If (cls == 'Backpack')						e.Replacement = "BackpackSpawner";
	}
}

Class FireDeathEffect : Inventory // Credits to jarewill on the ZDoom Forums
{
	uint oldTranslation;

	Override Void AttachToOwner(Actor other)
	{
        oldTranslation = other.Translation;
		Super.AttachToOwner(other);
	}
	Override Void DetachFromOwner()
    {
        Owner.Translation = oldTranslation;
    }

	Override Void DoEffect()
	{
		Super.DoEffect();
		If(Owner && !(Owner is "ExplosiveBarrel") && !(Owner is "LostSoul") && !(Owner is "PainElemental") && !(Owner is "CyberDemon") && !(Owner is "SpiderMastermind") && !Owner.FindState("Death.Fire", True) && !Owner.FindState("Burn", True))
		{
			Owner.bFLY = False; Owner.bNOGRAVITY = False; Owner.bNOBLOOD = True; // Set relevant flags so the monster cannot be damaged, can't fly and doesn't spawn blood.
			Owner.height = self.height; //Reset the height
			Owner.A_SetTranslation("Scorched"); //Set a color translation
		}
	}
}
